/*******************************************************************************
 *
 * (c) Copyright IBM Corp. 2000, 2016
 *
 *  This program and the accompanying materials are made available
 *  under the terms of the Eclipse Public License v1.0 and
 *  Apache License v2.0 which accompanies this distribution.
 *
 *      The Eclipse Public License is available at
 *      http://www.eclipse.org/legal/epl-v10.html
 *
 *      The Apache License v2.0 is available at
 *      http://www.opensource.org/licenses/apache2.0.php
 *
 * Contributors:
 *    Multiple authors (IBM Corp.) - initial implementation and documentation
 *******************************************************************************/

/*
 * This file will be included within an enum.  Only comments, preprocessor macros,
 * and enumerator definitions are permitted.
 */

   OPTIMIZATION_ENUM_ONLY(endOpts = 0x00) // Marks the end of a list of optimizations

   OPTIMIZATION(inlining)
   OPTIMIZATION(targetedInlining)
   OPTIMIZATION(trivialInlining)
   OPTIMIZATION(CFGSimplification)
   OPTIMIZATION(basicBlockHoisting)
   OPTIMIZATION(basicBlockExtension)
   OPTIMIZATION(treeSimplification)
   OPTIMIZATION(dynamicLiteralPool)
   OPTIMIZATION(localValuePropagation)
   OPTIMIZATION(arraycopyTransformation)
   OPTIMIZATION(localCSE)
   OPTIMIZATION(localDeadStoreElimination)
   OPTIMIZATION(signExtendLoads)
   OPTIMIZATION(loopCanonicalization)
   OPTIMIZATION(loopVersioner)
   OPTIMIZATION(loopReduction)
   OPTIMIZATION(loopReplicator)
   OPTIMIZATION(explicitNewInitialization)
   OPTIMIZATION(globalValuePropagation)
   OPTIMIZATION(redundantMonitorElimination)
   OPTIMIZATION(partialRedundancyElimination)
   OPTIMIZATION(globalCopyPropagation)
   OPTIMIZATION(globalDeadStoreElimination)
   OPTIMIZATION(escapeAnalysis)
   OPTIMIZATION(isolatedStoreElimination)
   OPTIMIZATION(deadTreesElimination)
   OPTIMIZATION(redundantGotoElimination)
   OPTIMIZATION(treesCleansing)
   OPTIMIZATION(localLiveVariablesForGC)
   OPTIMIZATION(globalLiveVariablesForGC)
   OPTIMIZATION(tacticalGlobalRegisterAllocator)
   OPTIMIZATION(localReordering)
   OPTIMIZATION(localLiveRangeReduction)
   OPTIMIZATION(compactNullChecks)
   OPTIMIZATION(loopStrider)
   OPTIMIZATION(loopInversion)
   OPTIMIZATION(fieldPrivatization)
   OPTIMIZATION(catchBlockRemoval)
   OPTIMIZATION(andSimplification)
   OPTIMIZATION(rematerialization)
   OPTIMIZATION(recompilationModifier)
   OPTIMIZATION(generalLoopUnroller)
   OPTIMIZATION(redundantAsyncCheckRemoval)
   OPTIMIZATION(virtualGuardTailSplitter)
   OPTIMIZATION(expressionsSimplification)
   OPTIMIZATION(blockSplitter)
   OPTIMIZATION(invariantArgumentPreexistence)
   OPTIMIZATION(dataAccessAccelerator)
   OPTIMIZATION(stringBuilderTransformer)
   OPTIMIZATION(stringPeepholes)
   OPTIMIZATION(switchAnalyzer)
   OPTIMIZATION(compactLocals)
   OPTIMIZATION(varHandleTransformer)
   OPTIMIZATION(unsafeFastPath)
   OPTIMIZATION(coldBlockMarker)
   OPTIMIZATION(coldBlockOutlining)
   OPTIMIZATION(basicBlockPeepHole)
   OPTIMIZATION(innerPreexistence)
   OPTIMIZATION(inductionVariableAnalysis)
   OPTIMIZATION(basicBlockOrdering)
   OPTIMIZATION(loopSpecializer)
   OPTIMIZATION(trivialStoreSinking)
   OPTIMIZATION(generalStoreSinking)
   OPTIMIZATION(idiomRecognition)
   OPTIMIZATION(reorderArrayIndexExpr)
   OPTIMIZATION(liveRangeSplitter)
   OPTIMIZATION(loopAliasRefiner)
   OPTIMIZATION(profiledNodeVersioning)
   OPTIMIZATION(allocationSinking)
   OPTIMIZATION(stripMining)
   OPTIMIZATION(prefetchInsertion)
   OPTIMIZATION(longRegAllocation)
   OPTIMIZATION(shrinkWrapping)
   OPTIMIZATION(jProfiling)
   OPTIMIZATION(trivialDeadTreeRemoval)
   OPTIMIZATION(osrDefAnalysis)
   OPTIMIZATION(blockShuffling)
   OPTIMIZATION(redundantBCDSignElimination)
   OPTIMIZATION(osrLiveRangeAnalysis)
   OPTIMIZATION(osrExceptionEdgeRemoval)
   OPTIMIZATION(SPMDKernelParallelization)
   OPTIMIZATION(arraysetStoreElimination)
   OPTIMIZATION(redundantInductionVarElimination)
   OPTIMIZATION(checkcastAndProfiledGuardCoalescer)
   OPTIMIZATION(trivialBlockExtension)
   OPTIMIZATION(virtualGuardHeadMerger)
   OPTIMIZATION(trivialDeadBlockRemover)
   OPTIMIZATION(rubyIlFastpather)
   OPTIMIZATION(lowerRubyMacroOps)
   OPTIMIZATION(IVTypeTransformation)
   OPTIMIZATION(loadExtensions)  // added temporarily for omr optimizer work
   OPTIMIZATION(regDepCopyRemoval)
   OPTIMIZATION(asyncCheckInsertion)
